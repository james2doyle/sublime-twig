%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Twig Meta
scope: meta.tag.twig
hidden: true

contexts:
  main:
    - match: '\b(if|else|endif|for|endfor|unless|endunless|apply|endapply|autoescape|endautoescape|embed|endembed|set|endset|filter|endfilter|macro|endmacro|sandbox|endsandbox|verbatim|endverbatim|with|endwith|do|deprecated)\b'
      scope: keyword.control.flow.twig
    - match: '[^block](abs|batch|capitalize|column|convert_encoding|country_name|country_timezones|currency_name|currency_symbol|data_uri|date|date_modify|default|escape|filter|first|format|format_currency|format_date|format_datetime|format_number|format_time|inky|inline_css|join|json_encode|keys|language_name|last|length|locale_name|lower|map|markdown|merge|nl2br|number_format|raw|range|reduce|replace|reverse|round|slice|sort|spaceless|split|striptags|timezone_name|title|trim|upper|url_encode)'
      scope: support.function.twig
    - match: 'block\s'
      scope: keyword.control.flow.twig
    - match: 'block\s(\.*+)'
      scope: variable.other.twig
    - match: 'endblock'
      scope: keyword.control.flow.twig
    - match: '[^block](==|!=|<|>|>=|<=|===|starts\swith|ends\swith|is\ssame|matches|divisible\sby)'
      scope: keyword.operator.logical.twig
    - match: '[^block](\.\.|\+|-|~|\*|\/|\/\/|%)'
      scope: keyword.operator.logical.twig
    - match: '\b(and|or|not|contains|in|is|by|offset)\b'
      scope: keyword.operator.twig
    - match: '\b(extends|flush|from|import|include|only|use|with)\b'
      scope: keyword.control.twig
    # single u character
    - match: '(?!u\w)(u)'
      scope: support.function.twig
    - match: '(attribute|constant|cycle|date|dump|include|max|min|parent|random|range|source|template_from_string)'
      scope: support.function.twig
    - match: '='
      scope: keyword.operator.assignment.twig
    - match: '(true|false|null|none|defined|divisibleby|empty|even|iterable|odd|as)'
      scope: constant.language.twig
    - match: '[a-z]+'
      scope: variable.other.twig
    - match: '[0-9]+'
      scope: constant.numeric.twig
    - match: '\.'
      scope: punctuation.separator.twig
    - match: '\s?(\|)\s?'
      scope: keyword.operator.logical.pipe.twig
    - match: "'"
      scope: punctuation.definition.string.begin.twig
      push:
        - meta_scope: string.quoted.single.twig
        - match: "(')|(\n)"
          captures:
            1: punctuation.definition.string.end.twig
            2: invalid.illegal.newline.twig
          pop: true
    - match: '"'
      scope: punctuation.definition.string.begin.twig
      push:
        - meta_scope: string.quoted.double.twig
        - match: '(")|(\n)'
          captures:
            1: punctuation.definition.string.end.twig
            2: invalid.illegal.newline.twig
          pop: true
